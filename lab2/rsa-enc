#!/usr/bin/env python3

from sys import argv,exit
import os.path

def exponentiation(m, e, N):
	final_mod = 1
	while e > 0:
		if e & 1 == 1:
			final_mod *= m
		m = m ** 2 % N
		e >>= 1
	return final_mod % N

def main():
	if len(argv) != 7:
		print("Usage: ./rsa-enc -k <key-file> -i <input-file> -o <output-file>")
		raise Exception("Bad Command Line Args")
	
	fin = open(argv[2],"r")
	vals = fin.read().splitlines()
	fin.close()
	
	numBitsN = int(vals[0])
	N = int(vals[1])
	e = int(vals[2])
	r = numBitsN / 4		#Changed this since first line is N and i need n; i.e. numBitsN / 2 / 2

	fin = open(argv[4],"r")
	msg = fin.read()
	fin.close()

	element = []
	element.append(0x0)
	element.append(0x2)

	messageLength = len(bytearray.fromhex(msg))
	
	for i in range (0,int(numBitsN / 2 / 8) - 3 - messageLength):
		randomByte = bytearray(os.urandom(1))
		if(randomByte[0] == 0x0):
			i -= 8
		else:
			element.append(randomByte[0])

	element.append(0x0)
	
	for value in bytearray.fromhex(msg):
		element.append(value)

	fout = open(argv[6],"w")
	fout.write(str(exponentiation(int.from_bytes(element,byteorder='big'), e, N)))
	fout.close()

if __name__ == "__main__":
	exit(main())
